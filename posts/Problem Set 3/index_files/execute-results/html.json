{
  "hash": "ab820e897ac532f332c59e450fa42583",
  "result": {
    "markdown": "---\ntitle: \"Problem Set 3\"\nauthor: \"Isaac Baron\"\ndate: \"2023-10-08\"\noutput: html_document\n---\n\n\n\n\n## R Markdown\n\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.\n\nWhen you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(cars)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00  \n```\n:::\n:::\n\n\n## Including Plots\n\nYou can also embed plots, for example:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/pressure-1.png){width=672}\n:::\n:::\n\n\nNote that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.\n\n#### **Assignment**\n\n1\\. Create a new Rmarkdown document that will show case your data exploration, modeling, and error testing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(rpart)\nlibrary(caret)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: lattice\n\nAttaching package: 'caret'\n\nThe following object is masked from 'package:purrr':\n\n    lift\n```\n:::\n\n```{.r .cell-code}\nlibrary(GGally)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n```\n:::\n:::\n\n\n2\\. Explore the data and determine the number of variables and the quantity of any missing values. If values are missing, prescribe a plan to deal with the problem.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nToycor <- read.csv(\"ToyotaCorolla.csv\")\nstr(Toycor)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t1436 obs. of  39 variables:\n $ Id               : int  1 2 3 4 5 6 7 8 9 10 ...\n $ Model            : chr  \"TOYOTA Corolla 2.0 D4D HATCHB TERRA 2/3-Doors\" \"TOYOTA Corolla 2.0 D4D HATCHB TERRA 2/3-Doors\" \"TOYOTA Corolla 2.0 D4D HATCHB TERRA 2/3-Doors\" \"TOYOTA Corolla 2.0 D4D HATCHB TERRA 2/3-Doors\" ...\n $ Price            : int  13500 13750 13950 14950 13750 12950 16900 18600 21500 12950 ...\n $ Age_08_04        : int  23 23 24 26 30 32 27 30 27 23 ...\n $ Mfg_Month        : int  10 10 9 7 3 1 6 3 6 10 ...\n $ Mfg_Year         : int  2002 2002 2002 2002 2002 2002 2002 2002 2002 2002 ...\n $ KM               : int  46986 72937 41711 48000 38500 61000 94612 75889 19700 71138 ...\n $ Fuel_Type        : chr  \"Diesel\" \"Diesel\" \"Diesel\" \"Diesel\" ...\n $ HP               : int  90 90 90 90 90 90 90 90 192 69 ...\n $ Met_Color        : int  1 1 1 0 0 0 1 1 0 0 ...\n $ Color            : chr  \"Blue\" \"Silver\" \"Blue\" \"Black\" ...\n $ Automatic        : int  0 0 0 0 0 0 0 0 0 0 ...\n $ CC               : int  2000 2000 2000 2000 2000 2000 2000 2000 1800 1900 ...\n $ Doors            : int  3 3 3 3 3 3 3 3 3 3 ...\n $ Cylinders        : int  4 4 4 4 4 4 4 4 4 4 ...\n $ Gears            : int  5 5 5 5 5 5 5 5 5 5 ...\n $ Quarterly_Tax    : int  210 210 210 210 210 210 210 210 100 185 ...\n $ Weight           : int  1165 1165 1165 1165 1170 1170 1245 1245 1185 1105 ...\n $ Mfr_Guarantee    : int  0 0 1 1 1 0 0 1 0 0 ...\n $ BOVAG_Guarantee  : int  1 1 1 1 1 1 1 1 1 1 ...\n $ Guarantee_Period : int  3 3 3 3 3 3 3 3 3 3 ...\n $ ABS              : int  1 1 1 1 1 1 1 1 1 1 ...\n $ Airbag_1         : int  1 1 1 1 1 1 1 1 1 1 ...\n $ Airbag_2         : int  1 1 1 1 1 1 1 1 0 1 ...\n $ Airco            : int  0 1 0 0 1 1 1 1 1 1 ...\n $ Automatic_airco  : int  0 0 0 0 0 0 0 0 0 0 ...\n $ Boardcomputer    : int  1 1 1 1 1 1 1 1 0 1 ...\n $ CD_Player        : int  0 1 0 0 0 0 0 1 0 0 ...\n $ Central_Lock     : int  1 1 0 0 1 1 1 1 1 0 ...\n $ Powered_Windows  : int  1 0 0 0 1 1 1 1 1 0 ...\n $ Power_Steering   : int  1 1 1 1 1 1 1 1 1 1 ...\n $ Radio            : int  0 0 0 0 0 0 0 0 1 0 ...\n $ Mistlamps        : int  0 0 0 0 1 1 0 0 0 0 ...\n $ Sport_Model      : int  0 0 0 0 0 0 1 0 0 0 ...\n $ Backseat_Divider : int  1 1 1 1 1 1 1 1 0 1 ...\n $ Metallic_Rim     : int  0 0 0 0 0 0 0 0 1 0 ...\n $ Radio_cassette   : int  0 0 0 0 0 0 0 0 1 0 ...\n $ Parking_Assistant: int  0 0 0 0 0 0 0 0 0 0 ...\n $ Tow_Bar          : int  0 0 0 0 0 0 0 0 0 0 ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmissing_values <- colSums(is.na(Toycor))\n```\n:::\n\n\n3\\. Analyze whether the Price variable is appropriate for a linear regression model and discuss its distribution. Are there any transformations that we might apply to the price variable?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(Toycor$Price, Toycor$IndependentVariable, main = \"Scatter Plot of Price vs. IndependentVariable\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nToycor$LogPrice <- log(Toycor$Price)\n```\n:::\n\n\n4\\. Is there a relationship between any of the features in the data and the Price feature? Perform some exploratory analysis to determine some features that are related using a feature plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nToycor = Toycor %>%\n  select(-Id, -Model, -Mfg_Month, -Cylinders)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nToycor_fct = Toycor %>%\n  select(-Price, -Age_08_04, -KM, -HP, -CC, -Quarterly_Tax, -Weight) %>%\n  mutate_all(.funs = factor)\n\nToycor_num = Toycor %>%\n  select(Price, Age_08_04, KM, HP, CC, Quarterly_Tax, Weight)\n\nToycor2 = bind_cols(Toycor_num, Toycor_fct)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nToycor2 %>%\n  keep(is.numeric) %>%\n  ggpairs()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncorrelation_mileage <- cor(Toycor$KM, Toycor$Price)\ncorrelation_age <- cor(Toycor$Age_08_04, Toycor$Price)\ncorrelation_Mfg_Year <- cor(Toycor$Mfg_Year, Toycor$Price)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nggplot(Toycor, aes(x = KM, y = Price)) +\n  geom_point() +\n  labs(title = \"Scatter Plot of Price vs. KM\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(Toycor, aes(x = Age_08_04, y = Price)) +\n  geom_point() +\n  labs(title = \"Scatter Plot of Price vs. Age_08_04\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(Toycor, aes(x = Mfg_Year, y = Price)) +\n  geom_point() +\n  labs(title = \"Scatter Plot of Price vs. Mfg_Year\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-3.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm1 = lm(Price ~ Age_08_04 + KM,\n         data = Toycor2)\nsummary(lm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Price ~ Age_08_04 + KM, data = Toycor2)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-6789.7  -971.9   -63.7   828.0 12633.5 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  2.048e+04  1.400e+02  146.26   <2e-16 ***\nAge_08_04   -1.541e+02  2.736e+00  -56.33   <2e-16 ***\nKM          -1.646e-02  1.357e-03  -12.13   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1663 on 1433 degrees of freedom\nMultiple R-squared:   0.79,\tAdjusted R-squared:  0.7897 \nF-statistic:  2695 on 2 and 1433 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nToycor %>%\n  select(-Fuel_Type, -Color) %>%\n  cor() %>%\n  corrplot::corrplot(., number.cex=.2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n5\\. Are there any predictor variables in the data that are potentially too strongly related to each other? Make sure to use reference any visualizations, tables, or numbers to show this.\n\n**Age_08_04** and **Price** are strongly negatively correlated. You can see this relationship in the scatter plot below. The negative slope of the trend line shows the negative correlation. The correlation of -0.877 between **Age_08_04** and **Price** is the only relationship that is potentially too strong.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(Toycor, aes(x = Age_08_04, y = Price)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"blue\") +  # Add a trendline (linear regression)\n  labs(title = \"Scatter Plot of Price vs. Age_08_04\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n6\\. Partition your data into a training set with 70% of the observations and a testing set with the remaining 30%.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)  \ntrainIndex <- createDataPartition(Toycor$Price, p = 0.7, list = FALSE)\ntrain_data <- Toycor[trainIndex, ]\ntest_data <- Toycor[-trainIndex, ]\n```\n:::\n\n\n7\\. Based on your results and relationships in questions (4) and (5), build a regression tree model to predict car prices. With the data Toycor_data Make sure to conduct cross validation to evaluate the model and choose the best cost complexity parameter for this problem (use default values for minsplit, minbucket, maxdepth, etc. But choose grid of cp values to tune over). Use rpart.plot to view your tree and discuss its complexity, usefulness, etc. What role is pre-pruning and post-pruning playing here?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncp_seq <- seq(0.01, 0.1, by = 0.01)\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n8\\. Look at the feature importance (using permuted feature importance in \"iml\" package, with loss = \"rmse\" and compare = \"ratio\") and determine which features have the biggest effect, and which might be okay to remove.\n\n9\\. Parsimony is about obtaining the simplest model possible, without oversimplifying. Remove a few of the less useful features and retrain / cross validate / tune your tree.\n\n10\\. Use the model resulting from question 9 and test predictions on the testing data. Compare the cross validation error and and testing data. Spend some time interpreting what this prediction error means for your pricing model and its use for CorollaCrowd.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}